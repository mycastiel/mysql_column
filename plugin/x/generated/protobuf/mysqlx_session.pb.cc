// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysqlx_session.proto

#include "mysqlx_session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace Mysqlx {
namespace Session {
class AuthenticateStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateStart>
      _instance;
} _AuthenticateStart_default_instance_;
class AuthenticateContinueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateContinue>
      _instance;
} _AuthenticateContinue_default_instance_;
class AuthenticateOkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateOk>
      _instance;
} _AuthenticateOk_default_instance_;
class ResetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reset>
      _instance;
} _Reset_default_instance_;
class CloseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Close>
      _instance;
} _Close_default_instance_;
}  // namespace Session
}  // namespace Mysqlx
namespace protobuf_mysqlx_5fsession_2eproto {
static void InitDefaultsAuthenticateStart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Mysqlx::Session::_AuthenticateStart_default_instance_;
    new (ptr) ::Mysqlx::Session::AuthenticateStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Mysqlx::Session::AuthenticateStart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateStart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateStart}, {}};

static void InitDefaultsAuthenticateContinue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Mysqlx::Session::_AuthenticateContinue_default_instance_;
    new (ptr) ::Mysqlx::Session::AuthenticateContinue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Mysqlx::Session::AuthenticateContinue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateContinue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateContinue}, {}};

static void InitDefaultsAuthenticateOk() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Mysqlx::Session::_AuthenticateOk_default_instance_;
    new (ptr) ::Mysqlx::Session::AuthenticateOk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Mysqlx::Session::AuthenticateOk::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateOk =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateOk}, {}};

static void InitDefaultsReset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Mysqlx::Session::_Reset_default_instance_;
    new (ptr) ::Mysqlx::Session::Reset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Mysqlx::Session::Reset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Reset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReset}, {}};

static void InitDefaultsClose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Mysqlx::Session::_Close_default_instance_;
    new (ptr) ::Mysqlx::Session::Close();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Mysqlx::Session::Close::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Close =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClose}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateStart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateContinue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateOk.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Close.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateStart, mech_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateStart, auth_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateStart, initial_response_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateContinue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateContinue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateContinue, auth_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateOk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateOk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::AuthenticateOk, auth_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::Reset, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::Reset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::Reset, keep_open_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::Close, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Mysqlx::Session::Close, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Mysqlx::Session::AuthenticateStart)},
  { 11, 17, sizeof(::Mysqlx::Session::AuthenticateContinue)},
  { 18, 24, sizeof(::Mysqlx::Session::AuthenticateOk)},
  { 25, 31, sizeof(::Mysqlx::Session::Reset)},
  { 32, 37, sizeof(::Mysqlx::Session::Close)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Mysqlx::Session::_AuthenticateStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Mysqlx::Session::_AuthenticateContinue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Mysqlx::Session::_AuthenticateOk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Mysqlx::Session::_Reset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Mysqlx::Session::_Close_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mysqlx_session.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024mysqlx_session.proto\022\016Mysqlx.Session\032\014"
      "mysqlx.proto\"Y\n\021AuthenticateStart\022\021\n\tmec"
      "h_name\030\001 \002(\t\022\021\n\tauth_data\030\002 \001(\014\022\030\n\020initi"
      "al_response\030\003 \001(\014:\004\210\3520\004\"3\n\024AuthenticateC"
      "ontinue\022\021\n\tauth_data\030\001 \002(\014:\010\220\3520\003\210\3520\005\")\n\016"
      "AuthenticateOk\022\021\n\tauth_data\030\001 \001(\014:\004\220\3520\004\""
      "\'\n\005Reset\022\030\n\tkeep_open\030\001 \001(\010:\005false:\004\210\3520\006"
      "\"\r\n\005Close:\004\210\3520\007B\031\n\027com.mysql.cj.x.protob"
      "uf"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mysqlx_session.proto", &protobuf_RegisterTypes);
  ::protobuf_mysqlx_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mysqlx_5fsession_2eproto
namespace Mysqlx {
namespace Session {

// ===================================================================

void AuthenticateStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateStart::kMechNameFieldNumber;
const int AuthenticateStart::kAuthDataFieldNumber;
const int AuthenticateStart::kInitialResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateStart::AuthenticateStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateStart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Mysqlx.Session.AuthenticateStart)
}
AuthenticateStart::AuthenticateStart(const AuthenticateStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mech_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mech_name()) {
    mech_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mech_name_);
  }
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_auth_data()) {
    auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
  }
  initial_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_initial_response()) {
    initial_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_response_);
  }
  // @@protoc_insertion_point(copy_constructor:Mysqlx.Session.AuthenticateStart)
}

void AuthenticateStart::SharedCtor() {
  mech_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateStart::~AuthenticateStart() {
  // @@protoc_insertion_point(destructor:Mysqlx.Session.AuthenticateStart)
  SharedDtor();
}

void AuthenticateStart::SharedDtor() {
  mech_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateStart::descriptor() {
  ::protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateStart& AuthenticateStart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateStart.base);
  return *internal_default_instance();
}


void AuthenticateStart::Clear() {
// @@protoc_insertion_point(message_clear_start:Mysqlx.Session.AuthenticateStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mech_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      auth_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      initial_response_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Mysqlx.Session.AuthenticateStart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mech_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mech_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mech_name().data(), static_cast<int>(this->mech_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Mysqlx.Session.AuthenticateStart.mech_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes auth_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_auth_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes initial_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_initial_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Mysqlx.Session.AuthenticateStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Mysqlx.Session.AuthenticateStart)
  return false;
#undef DO_
}

void AuthenticateStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Mysqlx.Session.AuthenticateStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mech_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mech_name().data(), static_cast<int>(this->mech_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Mysqlx.Session.AuthenticateStart.mech_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mech_name(), output);
  }

  // optional bytes auth_data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->auth_data(), output);
  }

  // optional bytes initial_response = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->initial_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Mysqlx.Session.AuthenticateStart)
}

::google::protobuf::uint8* AuthenticateStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Mysqlx.Session.AuthenticateStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mech_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mech_name().data(), static_cast<int>(this->mech_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Mysqlx.Session.AuthenticateStart.mech_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mech_name(), target);
  }

  // optional bytes auth_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->auth_data(), target);
  }

  // optional bytes initial_response = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->initial_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Mysqlx.Session.AuthenticateStart)
  return target;
}

size_t AuthenticateStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Mysqlx.Session.AuthenticateStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string mech_name = 1;
  if (has_mech_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mech_name());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional bytes auth_data = 2;
    if (has_auth_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->auth_data());
    }

    // optional bytes initial_response = 3;
    if (has_initial_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->initial_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Mysqlx.Session.AuthenticateStart)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Mysqlx.Session.AuthenticateStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Mysqlx.Session.AuthenticateStart)
    MergeFrom(*source);
  }
}

void AuthenticateStart::MergeFrom(const AuthenticateStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Mysqlx.Session.AuthenticateStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mech_name();
      mech_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mech_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_auth_data();
      auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_initial_response();
      initial_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_response_);
    }
  }
}

void AuthenticateStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Mysqlx.Session.AuthenticateStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateStart::CopyFrom(const AuthenticateStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mysqlx.Session.AuthenticateStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateStart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AuthenticateStart::Swap(AuthenticateStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateStart::InternalSwap(AuthenticateStart* other) {
  using std::swap;
  mech_name_.Swap(&other->mech_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  auth_data_.Swap(&other->auth_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  initial_response_.Swap(&other->initial_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateStart::GetMetadata() const {
  protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateContinue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateContinue::kAuthDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateContinue::AuthenticateContinue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateContinue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Mysqlx.Session.AuthenticateContinue)
}
AuthenticateContinue::AuthenticateContinue(const AuthenticateContinue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_auth_data()) {
    auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
  }
  // @@protoc_insertion_point(copy_constructor:Mysqlx.Session.AuthenticateContinue)
}

void AuthenticateContinue::SharedCtor() {
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateContinue::~AuthenticateContinue() {
  // @@protoc_insertion_point(destructor:Mysqlx.Session.AuthenticateContinue)
  SharedDtor();
}

void AuthenticateContinue::SharedDtor() {
  auth_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateContinue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateContinue::descriptor() {
  ::protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateContinue& AuthenticateContinue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateContinue.base);
  return *internal_default_instance();
}


void AuthenticateContinue::Clear() {
// @@protoc_insertion_point(message_clear_start:Mysqlx.Session.AuthenticateContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auth_data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateContinue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Mysqlx.Session.AuthenticateContinue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes auth_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_auth_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Mysqlx.Session.AuthenticateContinue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Mysqlx.Session.AuthenticateContinue)
  return false;
#undef DO_
}

void AuthenticateContinue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Mysqlx.Session.AuthenticateContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->auth_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Mysqlx.Session.AuthenticateContinue)
}

::google::protobuf::uint8* AuthenticateContinue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Mysqlx.Session.AuthenticateContinue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->auth_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Mysqlx.Session.AuthenticateContinue)
  return target;
}

size_t AuthenticateContinue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Mysqlx.Session.AuthenticateContinue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes auth_data = 1;
  if (has_auth_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->auth_data());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateContinue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Mysqlx.Session.AuthenticateContinue)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateContinue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateContinue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Mysqlx.Session.AuthenticateContinue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Mysqlx.Session.AuthenticateContinue)
    MergeFrom(*source);
  }
}

void AuthenticateContinue::MergeFrom(const AuthenticateContinue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Mysqlx.Session.AuthenticateContinue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth_data()) {
    set_has_auth_data();
    auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
  }
}

void AuthenticateContinue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Mysqlx.Session.AuthenticateContinue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateContinue::CopyFrom(const AuthenticateContinue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mysqlx.Session.AuthenticateContinue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateContinue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AuthenticateContinue::Swap(AuthenticateContinue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateContinue::InternalSwap(AuthenticateContinue* other) {
  using std::swap;
  auth_data_.Swap(&other->auth_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateContinue::GetMetadata() const {
  protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateOk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateOk::kAuthDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateOk::AuthenticateOk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateOk.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Mysqlx.Session.AuthenticateOk)
}
AuthenticateOk::AuthenticateOk(const AuthenticateOk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_auth_data()) {
    auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
  }
  // @@protoc_insertion_point(copy_constructor:Mysqlx.Session.AuthenticateOk)
}

void AuthenticateOk::SharedCtor() {
  auth_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateOk::~AuthenticateOk() {
  // @@protoc_insertion_point(destructor:Mysqlx.Session.AuthenticateOk)
  SharedDtor();
}

void AuthenticateOk::SharedDtor() {
  auth_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateOk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateOk::descriptor() {
  ::protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateOk& AuthenticateOk::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mysqlx_5fsession_2eproto::scc_info_AuthenticateOk.base);
  return *internal_default_instance();
}


void AuthenticateOk::Clear() {
// @@protoc_insertion_point(message_clear_start:Mysqlx.Session.AuthenticateOk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auth_data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateOk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Mysqlx.Session.AuthenticateOk)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes auth_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_auth_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Mysqlx.Session.AuthenticateOk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Mysqlx.Session.AuthenticateOk)
  return false;
#undef DO_
}

void AuthenticateOk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Mysqlx.Session.AuthenticateOk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->auth_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Mysqlx.Session.AuthenticateOk)
}

::google::protobuf::uint8* AuthenticateOk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Mysqlx.Session.AuthenticateOk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->auth_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Mysqlx.Session.AuthenticateOk)
  return target;
}

size_t AuthenticateOk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Mysqlx.Session.AuthenticateOk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes auth_data = 1;
  if (has_auth_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->auth_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateOk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Mysqlx.Session.AuthenticateOk)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateOk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateOk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Mysqlx.Session.AuthenticateOk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Mysqlx.Session.AuthenticateOk)
    MergeFrom(*source);
  }
}

void AuthenticateOk::MergeFrom(const AuthenticateOk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Mysqlx.Session.AuthenticateOk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth_data()) {
    set_has_auth_data();
    auth_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_data_);
  }
}

void AuthenticateOk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Mysqlx.Session.AuthenticateOk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateOk::CopyFrom(const AuthenticateOk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mysqlx.Session.AuthenticateOk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateOk::IsInitialized() const {
  return true;
}

void AuthenticateOk::Swap(AuthenticateOk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateOk::InternalSwap(AuthenticateOk* other) {
  using std::swap;
  auth_data_.Swap(&other->auth_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateOk::GetMetadata() const {
  protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reset::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reset::kKeepOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reset::Reset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mysqlx_5fsession_2eproto::scc_info_Reset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Mysqlx.Session.Reset)
}
Reset::Reset(const Reset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keep_open_ = from.keep_open_;
  // @@protoc_insertion_point(copy_constructor:Mysqlx.Session.Reset)
}

void Reset::SharedCtor() {
  keep_open_ = false;
}

Reset::~Reset() {
  // @@protoc_insertion_point(destructor:Mysqlx.Session.Reset)
  SharedDtor();
}

void Reset::SharedDtor() {
}

void Reset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reset::descriptor() {
  ::protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reset& Reset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mysqlx_5fsession_2eproto::scc_info_Reset.base);
  return *internal_default_instance();
}


void Reset::Clear() {
// @@protoc_insertion_point(message_clear_start:Mysqlx.Session.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keep_open_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Reset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Mysqlx.Session.Reset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool keep_open = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_keep_open();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keep_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Mysqlx.Session.Reset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Mysqlx.Session.Reset)
  return false;
#undef DO_
}

void Reset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Mysqlx.Session.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool keep_open = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->keep_open(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Mysqlx.Session.Reset)
}

::google::protobuf::uint8* Reset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Mysqlx.Session.Reset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool keep_open = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->keep_open(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Mysqlx.Session.Reset)
  return target;
}

size_t Reset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Mysqlx.Session.Reset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool keep_open = 1 [default = false];
  if (has_keep_open()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Mysqlx.Session.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  const Reset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Mysqlx.Session.Reset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Mysqlx.Session.Reset)
    MergeFrom(*source);
  }
}

void Reset::MergeFrom(const Reset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Mysqlx.Session.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_keep_open()) {
    set_keep_open(from.keep_open());
  }
}

void Reset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Mysqlx.Session.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reset::CopyFrom(const Reset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mysqlx.Session.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reset::IsInitialized() const {
  return true;
}

void Reset::Swap(Reset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reset::InternalSwap(Reset* other) {
  using std::swap;
  swap(keep_open_, other->keep_open_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reset::GetMetadata() const {
  protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Close::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Close::Close()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mysqlx_5fsession_2eproto::scc_info_Close.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Mysqlx.Session.Close)
}
Close::Close(const Close& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Mysqlx.Session.Close)
}

void Close::SharedCtor() {
}

Close::~Close() {
  // @@protoc_insertion_point(destructor:Mysqlx.Session.Close)
  SharedDtor();
}

void Close::SharedDtor() {
}

void Close::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Close::descriptor() {
  ::protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Close& Close::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mysqlx_5fsession_2eproto::scc_info_Close.base);
  return *internal_default_instance();
}


void Close::Clear() {
// @@protoc_insertion_point(message_clear_start:Mysqlx.Session.Close)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Close::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Mysqlx.Session.Close)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Mysqlx.Session.Close)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Mysqlx.Session.Close)
  return false;
#undef DO_
}

void Close::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Mysqlx.Session.Close)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Mysqlx.Session.Close)
}

::google::protobuf::uint8* Close::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Mysqlx.Session.Close)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Mysqlx.Session.Close)
  return target;
}

size_t Close::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Mysqlx.Session.Close)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Close::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Mysqlx.Session.Close)
  GOOGLE_DCHECK_NE(&from, this);
  const Close* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Close>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Mysqlx.Session.Close)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Mysqlx.Session.Close)
    MergeFrom(*source);
  }
}

void Close::MergeFrom(const Close& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Mysqlx.Session.Close)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Close::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Mysqlx.Session.Close)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Close::CopyFrom(const Close& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Mysqlx.Session.Close)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Close::IsInitialized() const {
  return true;
}

void Close::Swap(Close* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Close::InternalSwap(Close* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Close::GetMetadata() const {
  protobuf_mysqlx_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mysqlx_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Session
}  // namespace Mysqlx
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Mysqlx::Session::AuthenticateStart* Arena::CreateMaybeMessage< ::Mysqlx::Session::AuthenticateStart >(Arena* arena) {
  return Arena::CreateInternal< ::Mysqlx::Session::AuthenticateStart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Mysqlx::Session::AuthenticateContinue* Arena::CreateMaybeMessage< ::Mysqlx::Session::AuthenticateContinue >(Arena* arena) {
  return Arena::CreateInternal< ::Mysqlx::Session::AuthenticateContinue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Mysqlx::Session::AuthenticateOk* Arena::CreateMaybeMessage< ::Mysqlx::Session::AuthenticateOk >(Arena* arena) {
  return Arena::CreateInternal< ::Mysqlx::Session::AuthenticateOk >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Mysqlx::Session::Reset* Arena::CreateMaybeMessage< ::Mysqlx::Session::Reset >(Arena* arena) {
  return Arena::CreateInternal< ::Mysqlx::Session::Reset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Mysqlx::Session::Close* Arena::CreateMaybeMessage< ::Mysqlx::Session::Close >(Arena* arena) {
  return Arena::CreateInternal< ::Mysqlx::Session::Close >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
